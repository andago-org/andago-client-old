(self["webpackChunkandago_client"]=self["webpackChunkandago_client"]||[]).push([[636],{2261:(e,n,t)=>{"use strict";var l=t(6916),a=t(1702),u=t(1340),r=t(7066),s=t(2999),o=t(921),i=t(30),d=t(9909).get,c=t(9441),g=t(7168),p=o("native-string-replace",String.prototype.replace),v=RegExp.prototype.exec,x=v,f=a("".charAt),m=a("".indexOf),I=a("".replace),_=a("".slice),S=function(){var e=/a/,n=/b*/g;return l(v,e,"a"),l(v,n,"a"),0!==e.lastIndex||0!==n.lastIndex}(),U=s.BROKEN_CARET,k=void 0!==/()??/.exec("")[1],w=S||k||U||c||g;w&&(x=function(e){var n,t,a,s,o,c,g,w=this,h=d(w),b=u(e),y=h.raw;if(y)return y.lastIndex=w.lastIndex,n=l(x,y,b),w.lastIndex=y.lastIndex,n;var E=h.groups,R=U&&w.sticky,W=l(r,w),C=w.source,P=0,V=b;if(R&&(W=I(W,"y",""),-1===m(W,"g")&&(W+="g"),V=_(b,w.lastIndex),w.lastIndex>0&&(!w.multiline||w.multiline&&"\n"!==f(b,w.lastIndex-1))&&(C="(?: "+C+")",V=" "+V,P++),t=new RegExp("^(?:"+C+")",W)),k&&(t=new RegExp("^"+C+"$(?!\\s)",W)),S&&(a=w.lastIndex),s=l(v,R?t:w,V),R?s?(s.input=_(s.input,P),s[0]=_(s[0],P),s.index=w.lastIndex,w.lastIndex+=s[0].length):w.lastIndex=0:S&&s&&(w.lastIndex=w.global?s.index+s[0].length:a),k&&s&&s.length>1&&l(p,s[0],t,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(s[o]=void 0)})),s&&E)for(s.groups=c=i(null),o=0;o<E.length;o++)g=E[o],c[g[0]]=s[g[1]];return s}),e.exports=x},7066:(e,n,t)=>{"use strict";var l=t(9670);e.exports=function(){var e=l(this),n="";return e.hasIndices&&(n+="d"),e.global&&(n+="g"),e.ignoreCase&&(n+="i"),e.multiline&&(n+="m"),e.dotAll&&(n+="s"),e.unicode&&(n+="u"),e.unicodeSets&&(n+="v"),e.sticky&&(n+="y"),n}},2999:(e,n,t)=>{var l=t(7293),a=t(7854),u=a.RegExp,r=l((function(){var e=u("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),s=r||l((function(){return!u("a","y").sticky})),o=r||l((function(){var e=u("^r","gy");return e.lastIndex=2,null!=e.exec("str")}));e.exports={BROKEN_CARET:o,MISSED_STICKY:s,UNSUPPORTED_Y:r}},9441:(e,n,t)=>{var l=t(7293),a=t(7854),u=a.RegExp;e.exports=l((function(){var e=u(".","s");return!(e.dotAll&&e.exec("\n")&&"s"===e.flags)}))},7168:(e,n,t)=>{var l=t(7293),a=t(7854),u=a.RegExp;e.exports=l((function(){var e=u("(?<a>b)","g");return"b"!==e.exec("b").groups.a||"bc"!=="b".replace(e,"$<a>c")}))},4916:(e,n,t)=>{"use strict";var l=t(2109),a=t(2261);l({target:"RegExp",proto:!0,forced:/./.exec!==a},{exec:a})},3744:(e,n)=>{"use strict";n.Z=(e,n)=>{const t=e.__vccOpts||e;for(const[l,a]of n)t[l]=a;return t}},7636:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>d});t(4916);var l=t(6252),a=t(2262),u=t(9261),r=t(7627);const s=(0,l.aZ)({__name:"SignInPage",setup(e){const n=(0,a.iH)(""),t=(0,r.h)(),s=(0,a.iH)(!1),o=(0,a.iH)(!1);function i(e){(!/[0-9]/.test(e.key)||n.value.length>11)&&e.preventDefault()}function d(){t.tryLogin(n.value)}(0,l.YP)(n,(()=>{g()})),o.value=t.driverMode,(0,l.YP)(o,(async()=>{t.driverMode=o.value,console.log("driverMode",o.value)}));const c=(0,a.iH)(!1);function g(){const e=n.value.length>=10,t="01"===n.value.substring(0,2);c.value=e&&t}return g(),(e,t)=>((0,l.wg)(),(0,l.j4)((0,a.SU)(u._i),null,{default:(0,l.w5)((()=>[(0,l.Wm)((0,a.SU)(u.Gu),null,{default:(0,l.w5)((()=>[(0,l.Wm)((0,a.SU)(u.sr),null,{default:(0,l.w5)((()=>[(0,l.Wm)((0,a.SU)(u.wd),null,{default:(0,l.w5)((()=>[(0,l.Uk)("Sign In")])),_:1})])),_:1})])),_:1}),(0,l.Wm)((0,a.SU)(u.W2),{class:"ion-padding",fullscreen:!0},{default:(0,l.w5)((()=>[(0,l.Wm)((0,a.SU)(u.Ie),{fill:"outline"},{default:(0,l.w5)((()=>[(0,l.Wm)((0,a.SU)(u.Q$),{position:"floating"},{default:(0,l.w5)((()=>[(0,l.Uk)("Phone Number")])),_:1}),(0,l.Wm)((0,a.SU)(u.pK),{type:"tel",modelValue:n.value,"onUpdate:modelValue":t[0]||(t[0]=e=>n.value=e),modelModifiers:{trim:!0},inputmode:"numeric",pattern:"[0-9]{12}",onKeypress:i},null,8,["modelValue"]),s.value?((0,l.wg)(),(0,l.j4)((0,a.SU)(u.gu),{key:0,name:"checkmark-circle",color:"success"})):(0,l.kq)("",!0)])),_:1}),(0,l.Wm)((0,a.SU)(u.YG),{expand:"block",disabled:!c.value,onClick:d},{default:(0,l.w5)((()=>[(0,l.Uk)("Sign In")])),_:1},8,["disabled"]),(0,l.Wm)((0,a.SU)(u.Ie),null,{default:(0,l.w5)((()=>[(0,l.Wm)((0,a.SU)(u.Q$),null,{default:(0,l.w5)((()=>[(0,l.Uk)("Login as Driver")])),_:1}),(0,l.Wm)((0,a.SU)(u.nz),{modelValue:o.value,"onUpdate:modelValue":t[1]||(t[1]=e=>o.value=e)},null,8,["modelValue"])])),_:1})])),_:1})])),_:1}))}});var o=t(3744);const i=(0,o.Z)(s,[["__scopeId","data-v-d7934c20"]]),d=i}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUEsRUFBQUEsSUFBT2EsRUFBQUEsSUFBVSxLQUFNLENBQ2xDWCxTQUFTQyxFQUFBQSxFQUFBQSxLQUFTLElBQU0sRUFDdEJDLEVBQUFBLEVBQUFBLEtBQWFKLEVBQUFBLEVBQUFBLElBQU9lLEVBQUFBLElBQVcsS0FBTSxDQUNuQ2IsU0FBU0MsRUFBQUEsRUFBQUEsS0FBUyxJQUFNLEVBQ3RCSyxFQUFBQSxFQUFBQSxJQUFpQixzQkFFbkJDLEVBQUcsS0FFTEwsRUFBQUEsRUFBQUEsS0FBYUosRUFBQUEsRUFBQUEsSUFBT2tDLEVBQUFBLElBQWMsQ0FDaENmLFdBQVl2QyxFQUFXSSxNQUN2QixzQkFBdUJhLEVBQU8sS0FBT0EsRUFBTyxHQUFNdUIsR0FBa0J4QyxFQUFZSSxNQUFRb0MsSUFDdkYsS0FBTSxFQUFHLENBQUMsa0JBRWZYLEVBQUcsT0FHUEEsRUFBRyxPQUdQQSxFQUFHLElBR1AsSSxjQzFJQSxNQUFNMEIsR0FBMkIsT0FBZ0IsRUFBUSxDQUFDLENBQUMsWUFBWSxxQkFFdkUsRyIsInNvdXJjZXMiOlsid2VicGFjazovL2FuZGFnby1jbGllbnQvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvcmVnZXhwLWV4ZWMuanMiLCJ3ZWJwYWNrOi8vYW5kYWdvLWNsaWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9yZWdleHAtZmxhZ3MuanMiLCJ3ZWJwYWNrOi8vYW5kYWdvLWNsaWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9yZWdleHAtc3RpY2t5LWhlbHBlcnMuanMiLCJ3ZWJwYWNrOi8vYW5kYWdvLWNsaWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9yZWdleHAtdW5zdXBwb3J0ZWQtZG90LWFsbC5qcyIsIndlYnBhY2s6Ly9hbmRhZ28tY2xpZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3JlZ2V4cC11bnN1cHBvcnRlZC1uY2cuanMiLCJ3ZWJwYWNrOi8vYW5kYWdvLWNsaWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiLCJ3ZWJwYWNrOi8vYW5kYWdvLWNsaWVudC8uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvZXhwb3J0SGVscGVyLmpzIiwid2VicGFjazovL2FuZGFnby1jbGllbnQvLi9zcmMvdmlld3Mvc2lnbi1pbi9TaWduSW5QYWdlLnZ1ZT9iNjk5Iiwid2VicGFjazovL2FuZGFnby1jbGllbnQvLi9zcmMvdmlld3Mvc2lnbi1pbi9TaWduSW5QYWdlLnZ1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSByZWdleHAvbm8tZW1wdHktY2FwdHVyaW5nLWdyb3VwLCByZWdleHAvbm8tZW1wdHktZ3JvdXAsIHJlZ2V4cC9uby1sYXp5LWVuZHMgLS0gdGVzdGluZyAqL1xuLyogZXNsaW50LWRpc2FibGUgcmVnZXhwL25vLXVzZWxlc3MtcXVhbnRpZmllciAtLSB0ZXN0aW5nICovXG52YXIgY2FsbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi1jYWxsJyk7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG52YXIgdG9TdHJpbmcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tc3RyaW5nJyk7XG52YXIgcmVnZXhwRmxhZ3MgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVnZXhwLWZsYWdzJyk7XG52YXIgc3RpY2t5SGVscGVycyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZWdleHAtc3RpY2t5LWhlbHBlcnMnKTtcbnZhciBzaGFyZWQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2hhcmVkJyk7XG52YXIgY3JlYXRlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1jcmVhdGUnKTtcbnZhciBnZXRJbnRlcm5hbFN0YXRlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ludGVybmFsLXN0YXRlJykuZ2V0O1xudmFyIFVOU1VQUE9SVEVEX0RPVF9BTEwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVnZXhwLXVuc3VwcG9ydGVkLWRvdC1hbGwnKTtcbnZhciBVTlNVUFBPUlRFRF9OQ0cgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVnZXhwLXVuc3VwcG9ydGVkLW5jZycpO1xuXG52YXIgbmF0aXZlUmVwbGFjZSA9IHNoYXJlZCgnbmF0aXZlLXN0cmluZy1yZXBsYWNlJywgU3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlKTtcbnZhciBuYXRpdmVFeGVjID0gUmVnRXhwLnByb3RvdHlwZS5leGVjO1xudmFyIHBhdGNoZWRFeGVjID0gbmF0aXZlRXhlYztcbnZhciBjaGFyQXQgPSB1bmN1cnJ5VGhpcygnJy5jaGFyQXQpO1xudmFyIGluZGV4T2YgPSB1bmN1cnJ5VGhpcygnJy5pbmRleE9mKTtcbnZhciByZXBsYWNlID0gdW5jdXJyeVRoaXMoJycucmVwbGFjZSk7XG52YXIgc3RyaW5nU2xpY2UgPSB1bmN1cnJ5VGhpcygnJy5zbGljZSk7XG5cbnZhciBVUERBVEVTX0xBU1RfSU5ERVhfV1JPTkcgPSAoZnVuY3Rpb24gKCkge1xuICB2YXIgcmUxID0gL2EvO1xuICB2YXIgcmUyID0gL2IqL2c7XG4gIGNhbGwobmF0aXZlRXhlYywgcmUxLCAnYScpO1xuICBjYWxsKG5hdGl2ZUV4ZWMsIHJlMiwgJ2EnKTtcbiAgcmV0dXJuIHJlMS5sYXN0SW5kZXggIT09IDAgfHwgcmUyLmxhc3RJbmRleCAhPT0gMDtcbn0pKCk7XG5cbnZhciBVTlNVUFBPUlRFRF9ZID0gc3RpY2t5SGVscGVycy5CUk9LRU5fQ0FSRVQ7XG5cbi8vIG5vbnBhcnRpY2lwYXRpbmcgY2FwdHVyaW5nIGdyb3VwLCBjb3BpZWQgZnJvbSBlczUtc2hpbSdzIFN0cmluZyNzcGxpdCBwYXRjaC5cbnZhciBOUENHX0lOQ0xVREVEID0gLygpPz8vLmV4ZWMoJycpWzFdICE9PSB1bmRlZmluZWQ7XG5cbnZhciBQQVRDSCA9IFVQREFURVNfTEFTVF9JTkRFWF9XUk9ORyB8fCBOUENHX0lOQ0xVREVEIHx8IFVOU1VQUE9SVEVEX1kgfHwgVU5TVVBQT1JURURfRE9UX0FMTCB8fCBVTlNVUFBPUlRFRF9OQ0c7XG5cbmlmIChQQVRDSCkge1xuICBwYXRjaGVkRXhlYyA9IGZ1bmN0aW9uIGV4ZWMoc3RyaW5nKSB7XG4gICAgdmFyIHJlID0gdGhpcztcbiAgICB2YXIgc3RhdGUgPSBnZXRJbnRlcm5hbFN0YXRlKHJlKTtcbiAgICB2YXIgc3RyID0gdG9TdHJpbmcoc3RyaW5nKTtcbiAgICB2YXIgcmF3ID0gc3RhdGUucmF3O1xuICAgIHZhciByZXN1bHQsIHJlQ29weSwgbGFzdEluZGV4LCBtYXRjaCwgaSwgb2JqZWN0LCBncm91cDtcblxuICAgIGlmIChyYXcpIHtcbiAgICAgIHJhdy5sYXN0SW5kZXggPSByZS5sYXN0SW5kZXg7XG4gICAgICByZXN1bHQgPSBjYWxsKHBhdGNoZWRFeGVjLCByYXcsIHN0cik7XG4gICAgICByZS5sYXN0SW5kZXggPSByYXcubGFzdEluZGV4O1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG5cbiAgICB2YXIgZ3JvdXBzID0gc3RhdGUuZ3JvdXBzO1xuICAgIHZhciBzdGlja3kgPSBVTlNVUFBPUlRFRF9ZICYmIHJlLnN0aWNreTtcbiAgICB2YXIgZmxhZ3MgPSBjYWxsKHJlZ2V4cEZsYWdzLCByZSk7XG4gICAgdmFyIHNvdXJjZSA9IHJlLnNvdXJjZTtcbiAgICB2YXIgY2hhcnNBZGRlZCA9IDA7XG4gICAgdmFyIHN0ckNvcHkgPSBzdHI7XG5cbiAgICBpZiAoc3RpY2t5KSB7XG4gICAgICBmbGFncyA9IHJlcGxhY2UoZmxhZ3MsICd5JywgJycpO1xuICAgICAgaWYgKGluZGV4T2YoZmxhZ3MsICdnJykgPT09IC0xKSB7XG4gICAgICAgIGZsYWdzICs9ICdnJztcbiAgICAgIH1cblxuICAgICAgc3RyQ29weSA9IHN0cmluZ1NsaWNlKHN0ciwgcmUubGFzdEluZGV4KTtcbiAgICAgIC8vIFN1cHBvcnQgYW5jaG9yZWQgc3RpY2t5IGJlaGF2aW9yLlxuICAgICAgaWYgKHJlLmxhc3RJbmRleCA+IDAgJiYgKCFyZS5tdWx0aWxpbmUgfHwgcmUubXVsdGlsaW5lICYmIGNoYXJBdChzdHIsIHJlLmxhc3RJbmRleCAtIDEpICE9PSAnXFxuJykpIHtcbiAgICAgICAgc291cmNlID0gJyg/OiAnICsgc291cmNlICsgJyknO1xuICAgICAgICBzdHJDb3B5ID0gJyAnICsgc3RyQ29weTtcbiAgICAgICAgY2hhcnNBZGRlZCsrO1xuICAgICAgfVxuICAgICAgLy8gXig/ICsgcnggKyApIGlzIG5lZWRlZCwgaW4gY29tYmluYXRpb24gd2l0aCBzb21lIHN0ciBzbGljaW5nLCB0b1xuICAgICAgLy8gc2ltdWxhdGUgdGhlICd5JyBmbGFnLlxuICAgICAgcmVDb3B5ID0gbmV3IFJlZ0V4cCgnXig/OicgKyBzb3VyY2UgKyAnKScsIGZsYWdzKTtcbiAgICB9XG5cbiAgICBpZiAoTlBDR19JTkNMVURFRCkge1xuICAgICAgcmVDb3B5ID0gbmV3IFJlZ0V4cCgnXicgKyBzb3VyY2UgKyAnJCg/IVxcXFxzKScsIGZsYWdzKTtcbiAgICB9XG4gICAgaWYgKFVQREFURVNfTEFTVF9JTkRFWF9XUk9ORykgbGFzdEluZGV4ID0gcmUubGFzdEluZGV4O1xuXG4gICAgbWF0Y2ggPSBjYWxsKG5hdGl2ZUV4ZWMsIHN0aWNreSA/IHJlQ29weSA6IHJlLCBzdHJDb3B5KTtcblxuICAgIGlmIChzdGlja3kpIHtcbiAgICAgIGlmIChtYXRjaCkge1xuICAgICAgICBtYXRjaC5pbnB1dCA9IHN0cmluZ1NsaWNlKG1hdGNoLmlucHV0LCBjaGFyc0FkZGVkKTtcbiAgICAgICAgbWF0Y2hbMF0gPSBzdHJpbmdTbGljZShtYXRjaFswXSwgY2hhcnNBZGRlZCk7XG4gICAgICAgIG1hdGNoLmluZGV4ID0gcmUubGFzdEluZGV4O1xuICAgICAgICByZS5sYXN0SW5kZXggKz0gbWF0Y2hbMF0ubGVuZ3RoO1xuICAgICAgfSBlbHNlIHJlLmxhc3RJbmRleCA9IDA7XG4gICAgfSBlbHNlIGlmIChVUERBVEVTX0xBU1RfSU5ERVhfV1JPTkcgJiYgbWF0Y2gpIHtcbiAgICAgIHJlLmxhc3RJbmRleCA9IHJlLmdsb2JhbCA/IG1hdGNoLmluZGV4ICsgbWF0Y2hbMF0ubGVuZ3RoIDogbGFzdEluZGV4O1xuICAgIH1cbiAgICBpZiAoTlBDR19JTkNMVURFRCAmJiBtYXRjaCAmJiBtYXRjaC5sZW5ndGggPiAxKSB7XG4gICAgICAvLyBGaXggYnJvd3NlcnMgd2hvc2UgYGV4ZWNgIG1ldGhvZHMgZG9uJ3QgY29uc2lzdGVudGx5IHJldHVybiBgdW5kZWZpbmVkYFxuICAgICAgLy8gZm9yIE5QQ0csIGxpa2UgSUU4LiBOT1RFOiBUaGlzIGRvZXNuJ3Qgd29yayBmb3IgLyguPyk/L1xuICAgICAgY2FsbChuYXRpdmVSZXBsYWNlLCBtYXRjaFswXSwgcmVDb3B5LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZvciAoaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoIC0gMjsgaSsrKSB7XG4gICAgICAgICAgaWYgKGFyZ3VtZW50c1tpXSA9PT0gdW5kZWZpbmVkKSBtYXRjaFtpXSA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKG1hdGNoICYmIGdyb3Vwcykge1xuICAgICAgbWF0Y2guZ3JvdXBzID0gb2JqZWN0ID0gY3JlYXRlKG51bGwpO1xuICAgICAgZm9yIChpID0gMDsgaSA8IGdyb3Vwcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBncm91cCA9IGdyb3Vwc1tpXTtcbiAgICAgICAgb2JqZWN0W2dyb3VwWzBdXSA9IG1hdGNoW2dyb3VwWzFdXTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbWF0Y2g7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcGF0Y2hlZEV4ZWM7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYW4tb2JqZWN0Jyk7XG5cbi8vIGBSZWdFeHAucHJvdG90eXBlLmZsYWdzYCBnZXR0ZXIgaW1wbGVtZW50YXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtZ2V0LXJlZ2V4cC5wcm90b3R5cGUuZmxhZ3Ncbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICB2YXIgdGhhdCA9IGFuT2JqZWN0KHRoaXMpO1xuICB2YXIgcmVzdWx0ID0gJyc7XG4gIGlmICh0aGF0Lmhhc0luZGljZXMpIHJlc3VsdCArPSAnZCc7XG4gIGlmICh0aGF0Lmdsb2JhbCkgcmVzdWx0ICs9ICdnJztcbiAgaWYgKHRoYXQuaWdub3JlQ2FzZSkgcmVzdWx0ICs9ICdpJztcbiAgaWYgKHRoYXQubXVsdGlsaW5lKSByZXN1bHQgKz0gJ20nO1xuICBpZiAodGhhdC5kb3RBbGwpIHJlc3VsdCArPSAncyc7XG4gIGlmICh0aGF0LnVuaWNvZGUpIHJlc3VsdCArPSAndSc7XG4gIGlmICh0aGF0LnVuaWNvZGVTZXRzKSByZXN1bHQgKz0gJ3YnO1xuICBpZiAodGhhdC5zdGlja3kpIHJlc3VsdCArPSAneSc7XG4gIHJldHVybiByZXN1bHQ7XG59O1xuIiwidmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xuXG4vLyBiYWJlbC1taW5pZnkgYW5kIENsb3N1cmUgQ29tcGlsZXIgdHJhbnNwaWxlcyBSZWdFeHAoJ2EnLCAneScpIC0+IC9hL3kgYW5kIGl0IGNhdXNlcyBTeW50YXhFcnJvclxudmFyICRSZWdFeHAgPSBnbG9iYWwuUmVnRXhwO1xuXG52YXIgVU5TVVBQT1JURURfWSA9IGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgdmFyIHJlID0gJFJlZ0V4cCgnYScsICd5Jyk7XG4gIHJlLmxhc3RJbmRleCA9IDI7XG4gIHJldHVybiByZS5leGVjKCdhYmNkJykgIT0gbnVsbDtcbn0pO1xuXG4vLyBVQyBCcm93c2VyIGJ1Z1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzEwMDhcbnZhciBNSVNTRURfU1RJQ0tZID0gVU5TVVBQT1JURURfWSB8fCBmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHJldHVybiAhJFJlZ0V4cCgnYScsICd5Jykuc3RpY2t5O1xufSk7XG5cbnZhciBCUk9LRU5fQ0FSRVQgPSBVTlNVUFBPUlRFRF9ZIHx8IGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9NzczNjg3XG4gIHZhciByZSA9ICRSZWdFeHAoJ15yJywgJ2d5Jyk7XG4gIHJlLmxhc3RJbmRleCA9IDI7XG4gIHJldHVybiByZS5leGVjKCdzdHInKSAhPSBudWxsO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBCUk9LRU5fQ0FSRVQ6IEJST0tFTl9DQVJFVCxcbiAgTUlTU0VEX1NUSUNLWTogTUlTU0VEX1NUSUNLWSxcbiAgVU5TVVBQT1JURURfWTogVU5TVVBQT1JURURfWVxufTtcbiIsInZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcblxuLy8gYmFiZWwtbWluaWZ5IGFuZCBDbG9zdXJlIENvbXBpbGVyIHRyYW5zcGlsZXMgUmVnRXhwKCcuJywgJ3MnKSAtPiAvLi9zIGFuZCBpdCBjYXVzZXMgU3ludGF4RXJyb3JcbnZhciAkUmVnRXhwID0gZ2xvYmFsLlJlZ0V4cDtcblxubW9kdWxlLmV4cG9ydHMgPSBmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHZhciByZSA9ICRSZWdFeHAoJy4nLCAncycpO1xuICByZXR1cm4gIShyZS5kb3RBbGwgJiYgcmUuZXhlYygnXFxuJykgJiYgcmUuZmxhZ3MgPT09ICdzJyk7XG59KTtcbiIsInZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcblxuLy8gYmFiZWwtbWluaWZ5IGFuZCBDbG9zdXJlIENvbXBpbGVyIHRyYW5zcGlsZXMgUmVnRXhwKCcoPzxhPmIpJywgJ2cnKSAtPiAvKD88YT5iKS9nIGFuZCBpdCBjYXVzZXMgU3ludGF4RXJyb3JcbnZhciAkUmVnRXhwID0gZ2xvYmFsLlJlZ0V4cDtcblxubW9kdWxlLmV4cG9ydHMgPSBmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHZhciByZSA9ICRSZWdFeHAoJyg/PGE+YiknLCAnZycpO1xuICByZXR1cm4gcmUuZXhlYygnYicpLmdyb3Vwcy5hICE9PSAnYicgfHxcbiAgICAnYicucmVwbGFjZShyZSwgJyQ8YT5jJykgIT09ICdiYyc7XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIGV4ZWMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVnZXhwLWV4ZWMnKTtcblxuLy8gYFJlZ0V4cC5wcm90b3R5cGUuZXhlY2AgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXJlZ2V4cC5wcm90b3R5cGUuZXhlY1xuJCh7IHRhcmdldDogJ1JlZ0V4cCcsIHByb3RvOiB0cnVlLCBmb3JjZWQ6IC8uLy5leGVjICE9PSBleGVjIH0sIHtcbiAgZXhlYzogZXhlY1xufSk7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIHJ1bnRpbWUgaGVscGVyIGZvciBzZXR0aW5nIHByb3BlcnRpZXMgb24gY29tcG9uZW50c1xuLy8gaW4gYSB0cmVlLXNoYWthYmxlIHdheVxuZXhwb3J0cy5kZWZhdWx0ID0gKHNmYywgcHJvcHMpID0+IHtcbiAgICBjb25zdCB0YXJnZXQgPSBzZmMuX192Y2NPcHRzIHx8IHNmYztcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbF0gb2YgcHJvcHMpIHtcbiAgICAgICAgdGFyZ2V0W2tleV0gPSB2YWw7XG4gICAgfVxuICAgIHJldHVybiB0YXJnZXQ7XG59O1xuIiwiaW1wb3J0IHsgZGVmaW5lQ29tcG9uZW50IGFzIF9kZWZpbmVDb21wb25lbnQgfSBmcm9tICd2dWUnXG5pbXBvcnQgeyBjcmVhdGVUZXh0Vk5vZGUgYXMgX2NyZWF0ZVRleHRWTm9kZSwgdW5yZWYgYXMgX3VucmVmLCB3aXRoQ3R4IGFzIF93aXRoQ3R4LCBjcmVhdGVWTm9kZSBhcyBfY3JlYXRlVk5vZGUsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jayBhcyBfY3JlYXRlQmxvY2ssIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlIH0gZnJvbSBcInZ1ZVwiXG5cbmltcG9ydCB7IHJlZiwgd2F0Y2ggfSBmcm9tICd2dWUnO1xyXG5pbXBvcnQge1xyXG4gIElvbklucHV0LCBJb25CdXR0b24sIElvbkljb24sIElvblBhZ2UsIElvbkhlYWRlciwgSW9uVG9vbGJhcixcclxuICBJb25UaXRsZSwgSW9uQ29udGVudCwgSW9uSXRlbSwgSW9uTGFiZWwsIElvbkNoZWNrYm94LFxyXG59IGZyb20gJ0Bpb25pYy92dWUnO1xyXG5pbXBvcnQgeyBQcmVmZXJlbmNlcyB9IGZyb20gJ0BjYXBhY2l0b3IvcHJlZmVyZW5jZXMnO1xyXG5cclxuaW1wb3J0IHsgdXNlTWFpblN0b3JlIH0gZnJvbSAnQC9zdG9yZSc7XHJcblxyXG5cbmV4cG9ydCBkZWZhdWx0IC8qI19fUFVSRV9fKi9fZGVmaW5lQ29tcG9uZW50KHtcbiAgX19uYW1lOiAnU2lnbkluUGFnZScsXG4gIHNldHVwKF9fcHJvcHMpIHtcblxyXG5jb25zdCBwaG9uZU51bWJlciA9IHJlZignJyk7XHJcblxyXG5jb25zdCBzdG9yZSA9IHVzZU1haW5TdG9yZSgpO1xyXG5cclxuY29uc3QgaXNWYWxpZFBob25lTnVtYmVyID0gcmVmKGZhbHNlKTtcclxuY29uc3QgZHJpdmVyTW9kZSA9IHJlZihmYWxzZSk7XHJcblxyXG5mdW5jdGlvbiBvbktleVByZXNzKGV2ZW50OiBLZXlib2FyZEV2ZW50KSB7XHJcbiAgaWYgKCEvWzAtOV0vLnRlc3QoZXZlbnQua2V5KSB8fCBwaG9uZU51bWJlci52YWx1ZS5sZW5ndGggPiAxMSkge1xyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHRyeUxvZ2luKCkge1xyXG4gIHN0b3JlLnRyeUxvZ2luKHBob25lTnVtYmVyLnZhbHVlKTtcclxufVxyXG5cclxud2F0Y2gocGhvbmVOdW1iZXIsICgpID0+IHtcclxuICB1cGRhdGVDYW5TaWduSW4oKTtcclxufSk7XHJcblxyXG5kcml2ZXJNb2RlLnZhbHVlID0gc3RvcmUuZHJpdmVyTW9kZTtcclxuXHJcbndhdGNoKGRyaXZlck1vZGUsIGFzeW5jICgpID0+IHtcclxuICBzdG9yZS5kcml2ZXJNb2RlID0gZHJpdmVyTW9kZS52YWx1ZTtcclxuXHJcbiAgY29uc29sZS5sb2coJ2RyaXZlck1vZGUnLCBkcml2ZXJNb2RlLnZhbHVlKVxyXG59KTtcclxuXHJcbmNvbnN0IGNhblNpZ25JbiA9IHJlZihmYWxzZSk7XHJcblxyXG5mdW5jdGlvbiB1cGRhdGVDYW5TaWduSW4oKSB7XHJcbiAgY29uc3QgbGVuZ3RoUGFzcyA9IHBob25lTnVtYmVyLnZhbHVlLmxlbmd0aCA+PSAxMDtcclxuICBjb25zdCBpbml0aWFsUGFzcyA9IHBob25lTnVtYmVyLnZhbHVlLnN1YnN0cmluZygwLCAyKSA9PT0gJzAxJztcclxuXHJcbiAgY2FuU2lnbkluLnZhbHVlID1cclxuICAgIGxlbmd0aFBhc3MgJiZcclxuICAgIGluaXRpYWxQYXNzXHJcbiAgICA7XHJcbn1cclxuXHJcbnVwZGF0ZUNhblNpZ25JbigpO1xyXG5cclxuXG5yZXR1cm4gKF9jdHg6IGFueSxfY2FjaGU6IGFueSkgPT4ge1xuICByZXR1cm4gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF91bnJlZihJb25QYWdlKSwgbnVsbCwge1xuICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgIF9jcmVhdGVWTm9kZShfdW5yZWYoSW9uSGVhZGVyKSwgbnVsbCwge1xuICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgX2NyZWF0ZVZOb2RlKF91bnJlZihJb25Ub29sYmFyKSwgbnVsbCwge1xuICAgICAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgICAgICBfY3JlYXRlVk5vZGUoX3VucmVmKElvblRpdGxlKSwgbnVsbCwge1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICAgICAgICAgIF9jcmVhdGVUZXh0Vk5vZGUoXCJTaWduIEluXCIpXG4gICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgXzogMVxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgXSksXG4gICAgICAgICAgICBfOiAxXG4gICAgICAgICAgfSlcbiAgICAgICAgXSksXG4gICAgICAgIF86IDFcbiAgICAgIH0pLFxuICAgICAgX2NyZWF0ZVZOb2RlKF91bnJlZihJb25Db250ZW50KSwge1xuICAgICAgICBjbGFzczogXCJpb24tcGFkZGluZ1wiLFxuICAgICAgICBmdWxsc2NyZWVuOiB0cnVlXG4gICAgICB9LCB7XG4gICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICBfY3JlYXRlVk5vZGUoX3VucmVmKElvbkl0ZW0pLCB7IGZpbGw6IFwib3V0bGluZVwiIH0sIHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICAgICAgX2NyZWF0ZVZOb2RlKF91bnJlZihJb25MYWJlbCksIHsgcG9zaXRpb246IFwiZmxvYXRpbmdcIiB9LCB7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgICAgICAgICAgX2NyZWF0ZVRleHRWTm9kZShcIlBob25lIE51bWJlclwiKVxuICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgIF86IDFcbiAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgIF9jcmVhdGVWTm9kZShfdW5yZWYoSW9uSW5wdXQpLCB7XG4gICAgICAgICAgICAgICAgdHlwZTogXCJ0ZWxcIixcbiAgICAgICAgICAgICAgICBtb2RlbFZhbHVlOiBwaG9uZU51bWJlci52YWx1ZSxcbiAgICAgICAgICAgICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogX2NhY2hlWzBdIHx8IChfY2FjaGVbMF0gPSAoJGV2ZW50OiBhbnkpID0+ICgocGhvbmVOdW1iZXIpLnZhbHVlID0gJGV2ZW50KSksXG4gICAgICAgICAgICAgICAgbW9kZWxNb2RpZmllcnM6IHsgdHJpbTogdHJ1ZSB9LFxuICAgICAgICAgICAgICAgIGlucHV0bW9kZTogXCJudW1lcmljXCIsXG4gICAgICAgICAgICAgICAgcGF0dGVybjogXCJbMC05XXsxMn1cIixcbiAgICAgICAgICAgICAgICBvbktleXByZXNzOiBvbktleVByZXNzXG4gICAgICAgICAgICAgIH0sIG51bGwsIDgsIFtcIm1vZGVsVmFsdWVcIl0pLFxuICAgICAgICAgICAgICAoaXNWYWxpZFBob25lTnVtYmVyLnZhbHVlKVxuICAgICAgICAgICAgICAgID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF91bnJlZihJb25JY29uKSwge1xuICAgICAgICAgICAgICAgICAgICBrZXk6IDAsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiY2hlY2ttYXJrLWNpcmNsZVwiLFxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogXCJzdWNjZXNzXCJcbiAgICAgICAgICAgICAgICAgIH0pKVxuICAgICAgICAgICAgICAgIDogX2NyZWF0ZUNvbW1lbnRWTm9kZShcIlwiLCB0cnVlKVxuICAgICAgICAgICAgXSksXG4gICAgICAgICAgICBfOiAxXG4gICAgICAgICAgfSksXG4gICAgICAgICAgX2NyZWF0ZVZOb2RlKF91bnJlZihJb25CdXR0b24pLCB7XG4gICAgICAgICAgICBleHBhbmQ6IFwiYmxvY2tcIixcbiAgICAgICAgICAgIGRpc2FibGVkOiAhY2FuU2lnbkluLnZhbHVlLFxuICAgICAgICAgICAgb25DbGljazogdHJ5TG9naW5cbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICAgIF9jcmVhdGVUZXh0Vk5vZGUoXCJTaWduIEluXCIpXG4gICAgICAgICAgICBdKSxcbiAgICAgICAgICAgIF86IDFcbiAgICAgICAgICB9LCA4LCBbXCJkaXNhYmxlZFwiXSksXG4gICAgICAgICAgX2NyZWF0ZVZOb2RlKF91bnJlZihJb25JdGVtKSwgbnVsbCwge1xuICAgICAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgICAgICBfY3JlYXRlVk5vZGUoX3VucmVmKElvbkxhYmVsKSwgbnVsbCwge1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICAgICAgICAgIF9jcmVhdGVUZXh0Vk5vZGUoXCJMb2dpbiBhcyBEcml2ZXJcIilcbiAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICBfOiAxXG4gICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICBfY3JlYXRlVk5vZGUoX3VucmVmKElvbkNoZWNrYm94KSwge1xuICAgICAgICAgICAgICAgIG1vZGVsVmFsdWU6IGRyaXZlck1vZGUudmFsdWUsXG4gICAgICAgICAgICAgICAgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCI6IF9jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gKCRldmVudDogYW55KSA9PiAoKGRyaXZlck1vZGUpLnZhbHVlID0gJGV2ZW50KSlcbiAgICAgICAgICAgICAgfSwgbnVsbCwgOCwgW1wibW9kZWxWYWx1ZVwiXSlcbiAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgXzogMVxuICAgICAgICAgIH0pXG4gICAgICAgIF0pLFxuICAgICAgICBfOiAxXG4gICAgICB9KVxuICAgIF0pLFxuICAgIF86IDFcbiAgfSkpXG59XG59XG5cbn0pIiwiaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9TaWduSW5QYWdlLnZ1ZT92dWUmdHlwZT1zY3JpcHQmc2V0dXA9dHJ1ZSZsYW5nPXRzXCJcbmV4cG9ydCAqIGZyb20gXCIuL1NpZ25JblBhZ2UudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZzZXR1cD10cnVlJmxhbmc9dHNcIlxuXG5pbXBvcnQgXCIuL1NpZ25JblBhZ2UudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9ZDc5MzRjMjAmc2NvcGVkPXRydWUmbGFuZz1jc3NcIlxuXG5pbXBvcnQgZXhwb3J0Q29tcG9uZW50IGZyb20gXCJjOlxcXFxVc2Vyc1xcXFxLb3R0YWxvXFxcXERlc2t0b3BcXFxcV2ViIERldmVsb3BtZW50XFxcXFByb2plY3RzXFxcXFZpaVxcXFxBcHBzXFxcXGFuZGFnby1jbGllbnRcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcZGlzdFxcXFxleHBvcnRIZWxwZXIuanNcIlxuY29uc3QgX19leHBvcnRzX18gPSAvKiNfX1BVUkVfXyovZXhwb3J0Q29tcG9uZW50KHNjcmlwdCwgW1snX19zY29wZUlkJyxcImRhdGEtdi1kNzkzNGMyMFwiXV0pXG5cbmV4cG9ydCBkZWZhdWx0IF9fZXhwb3J0c19fIl0sIm5hbWVzIjpbImNhbGwiLCJ1bmN1cnJ5VGhpcyIsInRvU3RyaW5nIiwicmVnZXhwRmxhZ3MiLCJzdGlja3lIZWxwZXJzIiwic2hhcmVkIiwiY3JlYXRlIiwiZ2V0SW50ZXJuYWxTdGF0ZSIsIlVOU1VQUE9SVEVEX0RPVF9BTEwiLCJVTlNVUFBPUlRFRF9OQ0ciLCJuYXRpdmVSZXBsYWNlIiwiU3RyaW5nIiwicHJvdG90eXBlIiwicmVwbGFjZSIsIm5hdGl2ZUV4ZWMiLCJSZWdFeHAiLCJleGVjIiwicGF0Y2hlZEV4ZWMiLCJjaGFyQXQiLCJpbmRleE9mIiwic3RyaW5nU2xpY2UiLCJzbGljZSIsIlVQREFURVNfTEFTVF9JTkRFWF9XUk9ORyIsInJlMSIsInJlMiIsImxhc3RJbmRleCIsIlVOU1VQUE9SVEVEX1kiLCJCUk9LRU5fQ0FSRVQiLCJOUENHX0lOQ0xVREVEIiwidW5kZWZpbmVkIiwiUEFUQ0giLCJzdHJpbmciLCJyZXN1bHQiLCJyZUNvcHkiLCJtYXRjaCIsImkiLCJvYmplY3QiLCJncm91cCIsInJlIiwidGhpcyIsInN0YXRlIiwic3RyIiwicmF3IiwiZ3JvdXBzIiwic3RpY2t5IiwiZmxhZ3MiLCJzb3VyY2UiLCJjaGFyc0FkZGVkIiwic3RyQ29weSIsIm11bHRpbGluZSIsImlucHV0IiwiaW5kZXgiLCJsZW5ndGgiLCJnbG9iYWwiLCJhcmd1bWVudHMiLCJtb2R1bGUiLCJleHBvcnRzIiwiYW5PYmplY3QiLCJ0aGF0IiwiaGFzSW5kaWNlcyIsImlnbm9yZUNhc2UiLCJkb3RBbGwiLCJ1bmljb2RlIiwidW5pY29kZVNldHMiLCJmYWlscyIsIiRSZWdFeHAiLCJNSVNTRURfU1RJQ0tZIiwiYSIsIiQiLCJ0YXJnZXQiLCJwcm90byIsImZvcmNlZCIsInNmYyIsInByb3BzIiwiX192Y2NPcHRzIiwia2V5IiwidmFsIiwiX2RlZmluZUNvbXBvbmVudCIsIl9fbmFtZSIsInNldHVwIiwiX19wcm9wcyIsInBob25lTnVtYmVyIiwicmVmIiwic3RvcmUiLCJ1c2VNYWluU3RvcmUiLCJpc1ZhbGlkUGhvbmVOdW1iZXIiLCJkcml2ZXJNb2RlIiwib25LZXlQcmVzcyIsImV2ZW50IiwidGVzdCIsInZhbHVlIiwicHJldmVudERlZmF1bHQiLCJ0cnlMb2dpbiIsIndhdGNoIiwidXBkYXRlQ2FuU2lnbkluIiwiYXN5bmMiLCJjb25zb2xlIiwibG9nIiwiY2FuU2lnbkluIiwibGVuZ3RoUGFzcyIsImluaXRpYWxQYXNzIiwic3Vic3RyaW5nIiwiX2N0eCIsIl9jYWNoZSIsIl9vcGVuQmxvY2siLCJfY3JlYXRlQmxvY2siLCJfdW5yZWYiLCJJb25QYWdlIiwiZGVmYXVsdCIsIl93aXRoQ3R4IiwiX2NyZWF0ZVZOb2RlIiwiSW9uSGVhZGVyIiwiSW9uVG9vbGJhciIsIklvblRpdGxlIiwiX2NyZWF0ZVRleHRWTm9kZSIsIl8iLCJJb25Db250ZW50IiwiY2xhc3MiLCJmdWxsc2NyZWVuIiwiSW9uSXRlbSIsImZpbGwiLCJJb25MYWJlbCIsInBvc2l0aW9uIiwiSW9uSW5wdXQiLCJ0eXBlIiwibW9kZWxWYWx1ZSIsIiRldmVudCIsIm1vZGVsTW9kaWZpZXJzIiwidHJpbSIsImlucHV0bW9kZSIsInBhdHRlcm4iLCJvbktleXByZXNzIiwiSW9uSWNvbiIsIm5hbWUiLCJjb2xvciIsIl9jcmVhdGVDb21tZW50Vk5vZGUiLCJJb25CdXR0b24iLCJleHBhbmQiLCJkaXNhYmxlZCIsIm9uQ2xpY2siLCJJb25DaGVja2JveCIsIl9fZXhwb3J0c19fIl0sInNvdXJjZVJvb3QiOiIifQ==
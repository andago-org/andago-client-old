"use strict";(self["webpackChunkandago_client"]=self["webpackChunkandago_client"]||[]).push([[208],{3744:(n,t)=>{t.Z=(n,t)=>{const e=n.__vccOpts||n;for(const[l,o]of t)e[l]=o;return e}},1208:(n,t,e)=>{e.r(t),e.d(t,{default:()=>P});var l=e(6252),o=e(2262),u=e(7476);const a=(0,l._)("h1",null,"Page Three",-1);function r(n,t,e,o,u,r){const d=(0,l.up)("ion-back-button"),s=(0,l.up)("ion-buttons"),w=(0,l.up)("ion-title"),_=(0,l.up)("ion-toolbar"),m=(0,l.up)("ion-header"),c=(0,l.up)("ion-content");return(0,l.wg)(),(0,l.iD)(l.HY,null,[(0,l.Wm)(m,null,{default:(0,l.w5)((()=>[(0,l.Wm)(_,null,{default:(0,l.w5)((()=>[(0,l.Wm)(s,{slot:"start"},{default:(0,l.w5)((()=>[(0,l.Wm)(d)])),_:1}),(0,l.Wm)(w,null,{default:(0,l.w5)((()=>[(0,l.Uk)("Page Three")])),_:1})])),_:1})])),_:1}),(0,l.Wm)(c,{class:"ion-padding"},{default:(0,l.w5)((()=>[a])),_:1})],64)}const d={components:{IonHeader:u.Gu,IonTitle:u.wd,IonToolbar:u.sr,IonContent:u.W2,IonButtons:u.Sm,IonBackButton:u.oU}};var s=e(3744);const w=(0,s.Z)(d,[["render",r]]),_=w,m=(0,l._)("h1",null,"Page Two",-1),c=(0,l.aZ)({__name:"TestPage2",setup(n){const t=_;return(n,e)=>((0,l.wg)(),(0,l.iD)(l.HY,null,[(0,l.Wm)((0,o.SU)(u.Gu),null,{default:(0,l.w5)((()=>[(0,l.Wm)((0,o.SU)(u.sr),null,{default:(0,l.w5)((()=>[(0,l.Wm)((0,o.SU)(u.Sm),{slot:"start"},{default:(0,l.w5)((()=>[(0,l.Wm)((0,o.SU)(u.oU))])),_:1}),(0,l.Wm)((0,o.SU)(u.wd),null,{default:(0,l.w5)((()=>[(0,l.Uk)("Page Two")])),_:1})])),_:1})])),_:1}),(0,l.Wm)((0,o.SU)(u.W2),{class:"ion-padding"},{default:(0,l.w5)((()=>[m,(0,l.Wm)((0,o.SU)(u.Qx),{"router-direction":"forward",component:(0,o.SU)(t)},{default:(0,l.w5)((()=>[(0,l.Wm)((0,o.SU)(u.YG),null,{default:(0,l.w5)((()=>[(0,l.Uk)("Go to Page Three")])),_:1})])),_:1},8,["component"])])),_:1})],64))}}),f=c,i=f,U=(0,l._)("h1",null,"Page One",-1),W=(0,l.aZ)({__name:"TestPage1",setup(n){const t=i;return(n,e)=>((0,l.wg)(),(0,l.iD)(l.HY,null,[(0,l.Wm)((0,o.SU)(u.Gu),null,{default:(0,l.w5)((()=>[(0,l.Wm)((0,o.SU)(u.sr),null,{default:(0,l.w5)((()=>[(0,l.Wm)((0,o.SU)(u.wd),null,{default:(0,l.w5)((()=>[(0,l.Uk)("Page One")])),_:1})])),_:1})])),_:1}),(0,l.Wm)((0,o.SU)(u.W2),{class:"ion-padding"},{default:(0,l.w5)((()=>[U,(0,l.Wm)((0,o.SU)(u.Qx),{"router-direction":"forward",component:(0,o.SU)(t)},{default:(0,l.w5)((()=>[(0,l.Wm)((0,o.SU)(u.YG),null,{default:(0,l.w5)((()=>[(0,l.Uk)("Go to Page Two")])),_:1})])),_:1},8,["component"])])),_:1})],64))}}),p=W,S=p,g=(0,l.aZ)({__name:"TestPage",setup(n){const t=S;return(n,e)=>((0,l.wg)(),(0,l.j4)((0,o.SU)(u._i),null,{default:(0,l.w5)((()=>[(0,l.Wm)((0,o.SU)(u.O1),{root:(0,o.SU)(t)},null,8,["root"])])),_:1}))}}),k=g,P=k}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
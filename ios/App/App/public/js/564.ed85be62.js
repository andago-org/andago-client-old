"use strict";(self["webpackChunkandago_client"]=self["webpackChunkandago_client"]||[]).push([[564],{4564:(l,e,u)=>{u.r(e),u.d(e,{default:()=>U});var a=u(6252),t=u(2262),d=u(7476),n=u(3751);const o=(0,a.aZ)({__name:"SettingsPage",setup(l){const e=(0,n.h)(),u=(0,t.iH)(!1);(0,a.YP)(u,(l=>{e.fakeGeolocation=l}));const o=(0,t.iH)({latitude:3.052943,longitude:101.672337});return(0,a.YP)(o,(l=>{e.coordinate=l})),(l,e)=>((0,a.wg)(),(0,a.j4)((0,t.SU)(d._i),null,{default:(0,a.w5)((()=>[(0,a.Wm)((0,t.SU)(d.Gu),null,{default:(0,a.w5)((()=>[(0,a.Wm)((0,t.SU)(d.sr),null,{default:(0,a.w5)((()=>[(0,a.Wm)((0,t.SU)(d.wd),null,{default:(0,a.w5)((()=>[(0,a.Uk)("Settings")])),_:1})])),_:1})])),_:1}),(0,a.Wm)((0,t.SU)(d.W2),{fullscreen:!0},{default:(0,a.w5)((()=>[(0,a.Wm)((0,t.SU)(d.q_),null,{default:(0,a.w5)((()=>[(0,a.Wm)((0,t.SU)(d.Ie),null,{default:(0,a.w5)((()=>[(0,a.Wm)((0,t.SU)(d.Q$),null,{default:(0,a.w5)((()=>[(0,a.Uk)("Fake Geolocation:")])),_:1}),(0,a.Wm)((0,t.SU)(d.ho),{modelValue:u.value,"onUpdate:modelValue":e[0]||(e[0]=l=>u.value=l)},null,8,["modelValue"])])),_:1}),(0,a.Wm)((0,t.SU)(d.Ie),null,{default:(0,a.w5)((()=>[(0,a.Wm)((0,t.SU)(d.Q$),null,{default:(0,a.w5)((()=>[(0,a.Uk)("Latitude:")])),_:1}),(0,a.Wm)((0,t.SU)(d.pK),{modelValue:o.value.latitude,"onUpdate:modelValue":e[1]||(e[1]=l=>o.value.latitude=l)},null,8,["modelValue"])])),_:1}),(0,a.Wm)((0,t.SU)(d.Ie),null,{default:(0,a.w5)((()=>[(0,a.Wm)((0,t.SU)(d.Q$),null,{default:(0,a.w5)((()=>[(0,a.Uk)("Longitude:")])),_:1}),(0,a.Wm)((0,t.SU)(d.pK),{modelValue:o.value.longitude,"onUpdate:modelValue":e[2]||(e[2]=l=>o.value.longitude=l)},null,8,["modelValue"])])),_:1})])),_:1})])),_:1})])),_:1}))}}),m=o,U=m}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
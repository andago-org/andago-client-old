{"version":3,"file":"js/80.b974c544.js","mappings":"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","sources":["webpack://andago-client/./src/views/test/CometChatTestPage.vue?4972","webpack://andago-client/./src/views/test/CometChatTestPage.vue"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { createTextVNode as _createTextVNode, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { ref } from 'vue';\r\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonContent, IonInput, IonList, IonItem, IonLabel, IonButton } from '@ionic/vue';\r\nimport { CometChat } from '@cometchat-pro/cordova-ionic-chat';\r\nimport { useMainStore } from '@/store';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CometChatTestPage',\n  setup(__props) {\n\r\nconst store = useMainStore();\r\n\r\nconst guid = ref('');\r\nconst message = ref('');\r\n\r\nconst appID = \"23694678a67dabe9\" as string;\r\nconst region = \"eu\" as string;\r\nconst appSetting: CometChat.AppSettings = new CometChat.AppSettingsBuilder()\r\n  .subscribePresenceForAllUsers()\r\n  .setRegion(region)\r\n  .autoEstablishSocketConnection(true)\r\n  .build();\r\n\r\nCometChat.init(appID, appSetting).then(\r\n  (initialized: boolean) => {\r\n    console.log(\"Initialization completed successfully\", initialized);\r\n  }, (error: CometChat.CometChatException) => {\r\n    console.log(\"Initialization failed with error:\", error);\r\n  }\r\n);\r\n\r\nCometChat.getLoggedinUser().then(\r\n  (user: any) => {\r\n    if (!user) {\r\n      CometChat.login(store.profile.user.comet_token).then(\r\n        (user: CometChat.User) => {\r\n          console.log(\"Login Successful:\", { user });\r\n        }, (error: CometChat.CometChatException) => {\r\n          console.log(\"Login failed with exception:\", { error });\r\n        }\r\n      );\r\n    }\r\n  }, (error: CometChat.CometChatException) => {\r\n    console.log(\"Some Error Occured\", { error });\r\n  }\r\n);\r\n\r\nfunction send() {\r\n  const receiverID = guid.value;\r\n  const messageText = message.value;\r\n  const receiverType = CometChat.RECEIVER_TYPE.USER;\r\n  const textMessage = new CometChat.TextMessage(receiverID, messageText, receiverType);\r\n\r\n  CometChat.sendMessage(textMessage).then(\r\n    message => {\r\n      console.log(\"Message sent successfully:\", message);\r\n    }, error => {\r\n      console.log(\"Message sending failed with error:\", error);\r\n    }\r\n  );\r\n}\r\n\r\nfunction getConversation() {\r\n  const GUID = guid.value;\r\n  const limit = 30;\r\n  const messagesRequest = new CometChat.MessagesRequestBuilder()\r\n    .setType('text')\r\n    .setGUID(GUID)\r\n    .setLimit(limit)\r\n    .build();\r\n\r\n  messagesRequest.fetchPrevious().then(\r\n    messages => {\r\n      console.log(\"Message list fetched:\", messages);\r\n    }, error => {\r\n      console.log(\"Message fetching failed with error:\", error);\r\n    }\r\n  );\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(_unref(IonPage), null, {\n    default: _withCtx(() => [\n      _createVNode(_unref(IonHeader), null, {\n        default: _withCtx(() => [\n          _createVNode(_unref(IonToolbar), null, {\n            default: _withCtx(() => [\n              _createVNode(_unref(IonTitle), null, {\n                default: _withCtx(() => [\n                  _createTextVNode(\"CometChatTestPage\")\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_unref(IonContent), { fullscreen: true }, {\n        default: _withCtx(() => [\n          _createVNode(_unref(IonList), null, {\n            default: _withCtx(() => [\n              _createVNode(_unref(IonItem), null, {\n                default: _withCtx(() => [\n                  _createVNode(_unref(IonLabel), null, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\"GUID\")\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_unref(IonInput), {\n                    modelValue: guid.value,\n                    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((guid).value = $event))\n                  }, null, 8, [\"modelValue\"])\n                ]),\n                _: 1\n              }),\n              _createVNode(_unref(IonItem), null, {\n                default: _withCtx(() => [\n                  _createVNode(_unref(IonLabel), null, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\"Message\")\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_unref(IonInput), {\n                    modelValue: message.value,\n                    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((message).value = $event)),\n                    placeholder: \"Enter company name\"\n                  }, null, 8, [\"modelValue\"])\n                ]),\n                _: 1\n              }),\n              _createVNode(_unref(IonButton), {\n                onClick: send,\n                expand: \"block\"\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\"Send\")\n                ]),\n                _: 1\n              }),\n              _createVNode(_unref(IonButton), {\n                onClick: getConversation,\n                expand: \"block\"\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\"Get Conversation\")\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","import script from \"./CometChatTestPage.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./CometChatTestPage.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["_defineComponent","__name","setup","__props","store","useMainStore","guid","ref","message","appID","region","appSetting","CometChat","subscribePresenceForAllUsers","setRegion","autoEstablishSocketConnection","build","send","receiverID","value","messageText","receiverType","textMessage","then","console","log","error","getConversation","GUID","limit","messagesRequest","setType","setGUID","setLimit","fetchPrevious","messages","initialized","user","profile","comet_token","_ctx","_cache","_openBlock","_createBlock","_unref","IonPage","default","_withCtx","_createVNode","IonHeader","IonToolbar","IonTitle","_createTextVNode","_","IonContent","fullscreen","IonList","IonItem","IonLabel","IonInput","modelValue","$event","placeholder","IonButton","onClick","expand","__exports__"],"sourceRoot":""}
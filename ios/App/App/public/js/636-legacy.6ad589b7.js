(self["webpackChunkandago_client"]=self["webpackChunkandago_client"]||[]).push([[636],{2261:(e,n,t)=>{"use strict";var l=t(6916),a=t(1702),u=t(1340),r=t(7066),s=t(2999),o=t(921),i=t(30),d=t(9909).get,c=t(9441),g=t(7168),p=o("native-string-replace",String.prototype.replace),v=RegExp.prototype.exec,x=v,f=a("".charAt),m=a("".indexOf),I=a("".replace),_=a("".slice),S=function(){var e=/a/,n=/b*/g;return l(v,e,"a"),l(v,n,"a"),0!==e.lastIndex||0!==n.lastIndex}(),U=s.BROKEN_CARET,k=void 0!==/()??/.exec("")[1],w=S||k||U||c||g;w&&(x=function(e){var n,t,a,s,o,c,g,w=this,h=d(w),b=u(e),y=h.raw;if(y)return y.lastIndex=w.lastIndex,n=l(x,y,b),w.lastIndex=y.lastIndex,n;var E=h.groups,R=U&&w.sticky,W=l(r,w),C=w.source,P=0,V=b;if(R&&(W=I(W,"y",""),-1===m(W,"g")&&(W+="g"),V=_(b,w.lastIndex),w.lastIndex>0&&(!w.multiline||w.multiline&&"\n"!==f(b,w.lastIndex-1))&&(C="(?: "+C+")",V=" "+V,P++),t=new RegExp("^(?:"+C+")",W)),k&&(t=new RegExp("^"+C+"$(?!\\s)",W)),S&&(a=w.lastIndex),s=l(v,R?t:w,V),R?s?(s.input=_(s.input,P),s[0]=_(s[0],P),s.index=w.lastIndex,w.lastIndex+=s[0].length):w.lastIndex=0:S&&s&&(w.lastIndex=w.global?s.index+s[0].length:a),k&&s&&s.length>1&&l(p,s[0],t,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(s[o]=void 0)})),s&&E)for(s.groups=c=i(null),o=0;o<E.length;o++)g=E[o],c[g[0]]=s[g[1]];return s}),e.exports=x},7066:(e,n,t)=>{"use strict";var l=t(9670);e.exports=function(){var e=l(this),n="";return e.hasIndices&&(n+="d"),e.global&&(n+="g"),e.ignoreCase&&(n+="i"),e.multiline&&(n+="m"),e.dotAll&&(n+="s"),e.unicode&&(n+="u"),e.unicodeSets&&(n+="v"),e.sticky&&(n+="y"),n}},2999:(e,n,t)=>{var l=t(7293),a=t(7854),u=a.RegExp,r=l((function(){var e=u("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),s=r||l((function(){return!u("a","y").sticky})),o=r||l((function(){var e=u("^r","gy");return e.lastIndex=2,null!=e.exec("str")}));e.exports={BROKEN_CARET:o,MISSED_STICKY:s,UNSUPPORTED_Y:r}},9441:(e,n,t)=>{var l=t(7293),a=t(7854),u=a.RegExp;e.exports=l((function(){var e=u(".","s");return!(e.dotAll&&e.exec("\n")&&"s"===e.flags)}))},7168:(e,n,t)=>{var l=t(7293),a=t(7854),u=a.RegExp;e.exports=l((function(){var e=u("(?<a>b)","g");return"b"!==e.exec("b").groups.a||"bc"!=="b".replace(e,"$<a>c")}))},4916:(e,n,t)=>{"use strict";var l=t(2109),a=t(2261);l({target:"RegExp",proto:!0,forced:/./.exec!==a},{exec:a})},3744:(e,n)=>{"use strict";n.Z=(e,n)=>{const t=e.__vccOpts||e;for(const[l,a]of n)t[l]=a;return t}},7636:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>d});t(4916);var l=t(6252),a=t(2262),u=t(9261),r=t(7627);const s=(0,l.aZ)({__name:"SignInPage",setup(e){const n=(0,a.iH)(""),t=(0,r.h)(),s=(0,a.iH)(!1),o=(0,a.iH)(!1);function i(e){(!/[0-9]/.test(e.key)||n.value.length>11)&&e.preventDefault()}function d(){t.tryLogin(n.value)}(0,l.YP)(n,(()=>{g()})),o.value=t.driverMode,(0,l.YP)(o,(async()=>{t.driverMode=o.value,console.log("driverMode",o.value)}));const c=(0,a.iH)(!1);function g(){const e=n.value.length>=10,t="01"===n.value.substring(0,2);c.value=e&&t}return g(),(e,t)=>((0,l.wg)(),(0,l.j4)((0,a.SU)(u._i),null,{default:(0,l.w5)((()=>[(0,l.Wm)((0,a.SU)(u.Gu),null,{default:(0,l.w5)((()=>[(0,l.Wm)((0,a.SU)(u.sr),null,{default:(0,l.w5)((()=>[(0,l.Wm)((0,a.SU)(u.wd),null,{default:(0,l.w5)((()=>[(0,l.Uk)("Sign In")])),_:1})])),_:1})])),_:1}),(0,l.Wm)((0,a.SU)(u.W2),{class:"ion-padding",fullscreen:!0},{default:(0,l.w5)((()=>[(0,l.Wm)((0,a.SU)(u.Ie),{fill:"outline"},{default:(0,l.w5)((()=>[(0,l.Wm)((0,a.SU)(u.Q$),{position:"floating"},{default:(0,l.w5)((()=>[(0,l.Uk)("Phone Number")])),_:1}),(0,l.Wm)((0,a.SU)(u.pK),{type:"tel",modelValue:n.value,"onUpdate:modelValue":t[0]||(t[0]=e=>n.value=e),modelModifiers:{trim:!0},inputmode:"numeric",pattern:"[0-9]{12}",onKeypress:i},null,8,["modelValue"]),s.value?((0,l.wg)(),(0,l.j4)((0,a.SU)(u.gu),{key:0,name:"checkmark-circle",color:"success"})):(0,l.kq)("",!0)])),_:1}),(0,l.Wm)((0,a.SU)(u.YG),{expand:"block",disabled:!c.value,onClick:d},{default:(0,l.w5)((()=>[(0,l.Uk)("Sign In")])),_:1},8,["disabled"]),(0,l.Wm)((0,a.SU)(u.Ie),null,{default:(0,l.w5)((()=>[(0,l.Wm)((0,a.SU)(u.Q$),null,{default:(0,l.w5)((()=>[(0,l.Uk)("Login as Driver")])),_:1}),(0,l.Wm)((0,a.SU)(u.nz),{modelValue:o.value,"onUpdate:modelValue":t[1]||(t[1]=e=>o.value=e)},null,8,["modelValue"])])),_:1})])),_:1})])),_:1}))}});var o=t(3744);const i=(0,o.Z)(s,[["__scopeId","data-v-d7934c20"]]),d=i}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
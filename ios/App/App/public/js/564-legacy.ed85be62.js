"use strict";(self["webpackChunkandago_client"]=self["webpackChunkandago_client"]||[]).push([[564],{4564:(l,e,u)=>{u.r(e),u.d(e,{default:()=>U});var a=u(6252),t=u(2262),d=u(7476),n=u(3751);const o=(0,a.aZ)({__name:"SettingsPage",setup(l){const e=(0,n.h)(),u=(0,t.iH)(!1);(0,a.YP)(u,(l=>{e.fakeGeolocation=l}));const o=(0,t.iH)({latitude:3.052943,longitude:101.672337});return(0,a.YP)(o,(l=>{e.coordinate=l})),(l,e)=>((0,a.wg)(),(0,a.j4)((0,t.SU)(d._i),null,{default:(0,a.w5)((()=>[(0,a.Wm)((0,t.SU)(d.Gu),null,{default:(0,a.w5)((()=>[(0,a.Wm)((0,t.SU)(d.sr),null,{default:(0,a.w5)((()=>[(0,a.Wm)((0,t.SU)(d.wd),null,{default:(0,a.w5)((()=>[(0,a.Uk)("Settings")])),_:1})])),_:1})])),_:1}),(0,a.Wm)((0,t.SU)(d.W2),{fullscreen:!0},{default:(0,a.w5)((()=>[(0,a.Wm)((0,t.SU)(d.q_),null,{default:(0,a.w5)((()=>[(0,a.Wm)((0,t.SU)(d.Ie),null,{default:(0,a.w5)((()=>[(0,a.Wm)((0,t.SU)(d.Q$),null,{default:(0,a.w5)((()=>[(0,a.Uk)("Fake Geolocation:")])),_:1}),(0,a.Wm)((0,t.SU)(d.ho),{modelValue:u.value,"onUpdate:modelValue":e[0]||(e[0]=l=>u.value=l)},null,8,["modelValue"])])),_:1}),(0,a.Wm)((0,t.SU)(d.Ie),null,{default:(0,a.w5)((()=>[(0,a.Wm)((0,t.SU)(d.Q$),null,{default:(0,a.w5)((()=>[(0,a.Uk)("Latitude:")])),_:1}),(0,a.Wm)((0,t.SU)(d.pK),{modelValue:o.value.latitude,"onUpdate:modelValue":e[1]||(e[1]=l=>o.value.latitude=l)},null,8,["modelValue"])])),_:1}),(0,a.Wm)((0,t.SU)(d.Ie),null,{default:(0,a.w5)((()=>[(0,a.Wm)((0,t.SU)(d.Q$),null,{default:(0,a.w5)((()=>[(0,a.Uk)("Longitude:")])),_:1}),(0,a.Wm)((0,t.SU)(d.pK),{modelValue:o.value.longitude,"onUpdate:modelValue":e[2]||(e[2]=l=>o.value.longitude=l)},null,8,["modelValue"])])),_:1})])),_:1})])),_:1})])),_:1}))}}),m=o,U=m}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RyxDQUFDLGtCQUVmVCxFQUFHLEtBRUxMLEVBQUFBLEVBQUFBLEtBQWFKLEVBQUFBLEVBQUFBLElBQU9hLEVBQUFBLElBQVUsS0FBTSxDQUNsQ1gsU0FBU0MsRUFBQUEsRUFBQUEsS0FBUyxJQUFNLEVBQ3RCQyxFQUFBQSxFQUFBQSxLQUFhSixFQUFBQSxFQUFBQSxJQUFPYyxFQUFBQSxJQUFXLEtBQU0sQ0FDbkNaLFNBQVNDLEVBQUFBLEVBQUFBLEtBQVMsSUFBTSxFQUN0QkssRUFBQUEsRUFBQUEsSUFBaUIsaUJBRW5CQyxFQUFHLEtBRUxMLEVBQUFBLEVBQUFBLEtBQWFKLEVBQUFBLEVBQUFBLElBQU9tQixFQUFBQSxJQUFXLENBQzdCSCxXQUFZeEIsRUFBV3lCLE1BQU12QixVQUM3QixzQkFBdUJHLEVBQU8sS0FBT0EsRUFBTyxHQUFNcUIsR0FBa0IxQixFQUFXeUIsTUFBTXZCLFVBQWF3QixJQUNqRyxLQUFNLEVBQUcsQ0FBQyxrQkFFZlQsRUFBRyxPQUdQQSxFQUFHLE9BR1BBLEVBQUcsT0FHUEEsRUFBRyxJQUdQLElDMUdNVyxFQUFjLEVBRXBCLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbmRhZ28tY2xpZW50Ly4vc3JjL3ZpZXdzL3BhZ2VzL1NldHRpbmdzUGFnZS52dWU/ZmFkNyIsIndlYnBhY2s6Ly9hbmRhZ28tY2xpZW50Ly4vc3JjL3ZpZXdzL3BhZ2VzL1NldHRpbmdzUGFnZS52dWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVmaW5lQ29tcG9uZW50IGFzIF9kZWZpbmVDb21wb25lbnQgfSBmcm9tICd2dWUnXG5pbXBvcnQgeyBjcmVhdGVUZXh0Vk5vZGUgYXMgX2NyZWF0ZVRleHRWTm9kZSwgdW5yZWYgYXMgX3VucmVmLCB3aXRoQ3R4IGFzIF93aXRoQ3R4LCBjcmVhdGVWTm9kZSBhcyBfY3JlYXRlVk5vZGUsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jayBhcyBfY3JlYXRlQmxvY2sgfSBmcm9tIFwidnVlXCJcblxuaW1wb3J0IHsgcmVmLCB3YXRjaCB9IGZyb20gJ3Z1ZSc7XHJcbmltcG9ydCB7XHJcbiAgSW9uUGFnZSwgSW9uSGVhZGVyLCBJb25Ub29sYmFyLCBJb25UaXRsZSwgSW9uQ29udGVudCwgSW9uTGlzdCwgSW9uSXRlbSwgSW9uTGFiZWwsIElvbklucHV0LCBJb25Ub2dnbGUsXHJcbn0gZnJvbSAnQGlvbmljL3Z1ZSc7XHJcbmltcG9ydCB7IENvb3JkaW5hdGUgfSBmcm9tICdAL2ludGVyZmFjZXMvdHlwZXMnO1xyXG5pbXBvcnQgeyB1c2VNYWluU3RvcmUgfSBmcm9tICdAL3N0b3JlJztcclxuXHJcblxuZXhwb3J0IGRlZmF1bHQgLyojX19QVVJFX18qL19kZWZpbmVDb21wb25lbnQoe1xuICBfX25hbWU6ICdTZXR0aW5nc1BhZ2UnLFxuICBzZXR1cChfX3Byb3BzKSB7XG5cclxuY29uc3Qgc3RvcmUgPSB1c2VNYWluU3RvcmUoKTtcclxuXHJcbmNvbnN0IGZha2VHZW9sb2NhdGlvbiA9IHJlZihmYWxzZSk7XHJcblxyXG53YXRjaChmYWtlR2VvbG9jYXRpb24sIChuZXdGYWtlR2VvbG9jYXRpb24pID0+IHtcclxuICBzdG9yZS5mYWtlR2VvbG9jYXRpb24gPSBuZXdGYWtlR2VvbG9jYXRpb247XHJcbn0pO1xyXG5cclxuY29uc3QgY29vcmRpbmF0ZSA9IHJlZjxDb29yZGluYXRlPih7IGxhdGl0dWRlOiAzLjA1Mjk0MywgbG9uZ2l0dWRlOiAxMDEuNjcyMzM3IH0pO1xyXG5cclxud2F0Y2goY29vcmRpbmF0ZSwgKG5ld0Nvb3JkaW5hdGUpID0+IHtcclxuICBzdG9yZS5jb29yZGluYXRlID0gbmV3Q29vcmRpbmF0ZTtcclxufSk7XHJcblxyXG5cclxuXG5yZXR1cm4gKF9jdHg6IGFueSxfY2FjaGU6IGFueSkgPT4ge1xuICByZXR1cm4gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF91bnJlZihJb25QYWdlKSwgbnVsbCwge1xuICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgIF9jcmVhdGVWTm9kZShfdW5yZWYoSW9uSGVhZGVyKSwgbnVsbCwge1xuICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgX2NyZWF0ZVZOb2RlKF91bnJlZihJb25Ub29sYmFyKSwgbnVsbCwge1xuICAgICAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgICAgICBfY3JlYXRlVk5vZGUoX3VucmVmKElvblRpdGxlKSwgbnVsbCwge1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICAgICAgICAgIF9jcmVhdGVUZXh0Vk5vZGUoXCJTZXR0aW5nc1wiKVxuICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgIF86IDFcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgXzogMVxuICAgICAgICAgIH0pXG4gICAgICAgIF0pLFxuICAgICAgICBfOiAxXG4gICAgICB9KSxcbiAgICAgIF9jcmVhdGVWTm9kZShfdW5yZWYoSW9uQ29udGVudCksIHsgZnVsbHNjcmVlbjogdHJ1ZSB9LCB7XG4gICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICBfY3JlYXRlVk5vZGUoX3VucmVmKElvbkxpc3QpLCBudWxsLCB7XG4gICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICAgIF9jcmVhdGVWTm9kZShfdW5yZWYoSW9uSXRlbSksIG51bGwsIHtcbiAgICAgICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICAgICAgICBfY3JlYXRlVk5vZGUoX3VucmVmKElvbkxhYmVsKSwgbnVsbCwge1xuICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICAgICAgICAgICAgX2NyZWF0ZVRleHRWTm9kZShcIkZha2UgR2VvbG9jYXRpb246XCIpXG4gICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICBfOiAxXG4gICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgIF9jcmVhdGVWTm9kZShfdW5yZWYoSW9uVG9nZ2xlKSwge1xuICAgICAgICAgICAgICAgICAgICBtb2RlbFZhbHVlOiBmYWtlR2VvbG9jYXRpb24udmFsdWUsXG4gICAgICAgICAgICAgICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiBfY2FjaGVbMF0gfHwgKF9jYWNoZVswXSA9ICgkZXZlbnQ6IGFueSkgPT4gKChmYWtlR2VvbG9jYXRpb24pLnZhbHVlID0gJGV2ZW50KSlcbiAgICAgICAgICAgICAgICAgIH0sIG51bGwsIDgsIFtcIm1vZGVsVmFsdWVcIl0pXG4gICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgXzogMVxuICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgX2NyZWF0ZVZOb2RlKF91bnJlZihJb25JdGVtKSwgbnVsbCwge1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICAgICAgICAgIF9jcmVhdGVWTm9kZShfdW5yZWYoSW9uTGFiZWwpLCBudWxsLCB7XG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICAgICAgICAgICAgICBfY3JlYXRlVGV4dFZOb2RlKFwiTGF0aXR1ZGU6XCIpXG4gICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICBfOiAxXG4gICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgIF9jcmVhdGVWTm9kZShfdW5yZWYoSW9uSW5wdXQpLCB7XG4gICAgICAgICAgICAgICAgICAgIG1vZGVsVmFsdWU6IGNvb3JkaW5hdGUudmFsdWUubGF0aXR1ZGUsXG4gICAgICAgICAgICAgICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9ICgkZXZlbnQ6IGFueSkgPT4gKChjb29yZGluYXRlLnZhbHVlLmxhdGl0dWRlKSA9ICRldmVudCkpXG4gICAgICAgICAgICAgICAgICB9LCBudWxsLCA4LCBbXCJtb2RlbFZhbHVlXCJdKVxuICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgIF86IDFcbiAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgIF9jcmVhdGVWTm9kZShfdW5yZWYoSW9uSXRlbSksIG51bGwsIHtcbiAgICAgICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICAgICAgICBfY3JlYXRlVk5vZGUoX3VucmVmKElvbkxhYmVsKSwgbnVsbCwge1xuICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICAgICAgICAgICAgX2NyZWF0ZVRleHRWTm9kZShcIkxvbmdpdHVkZTpcIilcbiAgICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICAgIF86IDFcbiAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgX2NyZWF0ZVZOb2RlKF91bnJlZihJb25JbnB1dCksIHtcbiAgICAgICAgICAgICAgICAgICAgbW9kZWxWYWx1ZTogY29vcmRpbmF0ZS52YWx1ZS5sb25naXR1ZGUsXG4gICAgICAgICAgICAgICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiBfY2FjaGVbMl0gfHwgKF9jYWNoZVsyXSA9ICgkZXZlbnQ6IGFueSkgPT4gKChjb29yZGluYXRlLnZhbHVlLmxvbmdpdHVkZSkgPSAkZXZlbnQpKVxuICAgICAgICAgICAgICAgICAgfSwgbnVsbCwgOCwgW1wibW9kZWxWYWx1ZVwiXSlcbiAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICBfOiAxXG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBdKSxcbiAgICAgICAgICAgIF86IDFcbiAgICAgICAgICB9KVxuICAgICAgICBdKSxcbiAgICAgICAgXzogMVxuICAgICAgfSlcbiAgICBdKSxcbiAgICBfOiAxXG4gIH0pKVxufVxufVxuXG59KSIsImltcG9ydCBzY3JpcHQgZnJvbSBcIi4vU2V0dGluZ3NQYWdlLnZ1ZT92dWUmdHlwZT1zY3JpcHQmc2V0dXA9dHJ1ZSZsYW5nPXRzXCJcbmV4cG9ydCAqIGZyb20gXCIuL1NldHRpbmdzUGFnZS52dWU/dnVlJnR5cGU9c2NyaXB0JnNldHVwPXRydWUmbGFuZz10c1wiXG5cbmNvbnN0IF9fZXhwb3J0c19fID0gc2NyaXB0O1xuXG5leHBvcnQgZGVmYXVsdCBfX2V4cG9ydHNfXyJdLCJuYW1lcyI6WyJfZGVmaW5lQ29tcG9uZW50IiwiX19uYW1lIiwic2V0dXAiLCJfX3Byb3BzIiwic3RvcmUiLCJ1c2VNYWluU3RvcmUiLCJmYWtlR2VvbG9jYXRpb24iLCJyZWYiLCJ3YXRjaCIsIm5ld0Zha2VHZW9sb2NhdGlvbiIsImNvb3JkaW5hdGUiLCJsYXRpdHVkZSIsImxvbmdpdHVkZSIsIm5ld0Nvb3JkaW5hdGUiLCJfY3R4IiwiX2NhY2hlIiwiX29wZW5CbG9jayIsIl9jcmVhdGVCbG9jayIsIl91bnJlZiIsIklvblBhZ2UiLCJkZWZhdWx0IiwiX3dpdGhDdHgiLCJfY3JlYXRlVk5vZGUiLCJJb25IZWFkZXIiLCJJb25Ub29sYmFyIiwiSW9uVGl0bGUiLCJfY3JlYXRlVGV4dFZOb2RlIiwiXyIsIklvbkNvbnRlbnQiLCJmdWxsc2NyZWVuIiwiSW9uTGlzdCIsIklvbkl0ZW0iLCJJb25MYWJlbCIsIklvblRvZ2dsZSIsIm1vZGVsVmFsdWUiLCJ2YWx1ZSIsIiRldmVudCIsIklvbklucHV0IiwiX19leHBvcnRzX18iXSwic291cmNlUm9vdCI6IiJ9
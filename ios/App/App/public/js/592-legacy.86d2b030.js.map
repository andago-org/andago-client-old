{"version":3,"file":"js/592-legacy.86d2b030.js","mappings":"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","sources":["webpack://andago-client/./node_modules/@googlemaps/js-api-loader/dist/index.esm.js","webpack://andago-client/./src/plugins/google-map.ts"],"sourcesContent":["// do not edit .js files directly - edit src/index.jst\n\n\n\nvar fastDeepEqual = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n\n/**\n * Copyright 2019 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at.\n *\n *      Http://www.apache.org/licenses/LICENSE-2.0.\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DEFAULT_ID = \"__googleMapsScriptId\";\n/**\n * The status of the [[Loader]].\n */\nvar LoaderStatus;\n(function (LoaderStatus) {\n    LoaderStatus[LoaderStatus[\"INITIALIZED\"] = 0] = \"INITIALIZED\";\n    LoaderStatus[LoaderStatus[\"LOADING\"] = 1] = \"LOADING\";\n    LoaderStatus[LoaderStatus[\"SUCCESS\"] = 2] = \"SUCCESS\";\n    LoaderStatus[LoaderStatus[\"FAILURE\"] = 3] = \"FAILURE\";\n})(LoaderStatus || (LoaderStatus = {}));\n/**\n * [[Loader]] makes it easier to add Google Maps JavaScript API to your application\n * dynamically using\n * [Promises](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\n * It works by dynamically creating and appending a script node to the the\n * document head and wrapping the callback function so as to return a promise.\n *\n * ```\n * const loader = new Loader({\n *   apiKey: \"\",\n *   version: \"weekly\",\n *   libraries: [\"places\"]\n * });\n *\n * loader.load().then((google) => {\n *   const map = new google.maps.Map(...)\n * })\n * ```\n */\nclass Loader {\n    /**\n     * Creates an instance of Loader using [[LoaderOptions]]. No defaults are set\n     * using this library, instead the defaults are set by the Google Maps\n     * JavaScript API server.\n     *\n     * ```\n     * const loader = Loader({apiKey, version: 'weekly', libraries: ['places']});\n     * ```\n     */\n    constructor({ apiKey, authReferrerPolicy, channel, client, id = DEFAULT_ID, language, libraries = [], mapIds, nonce, region, retries = 3, url = \"https://maps.googleapis.com/maps/api/js\", version, }) {\n        this.CALLBACK = \"__googleMapsCallback\";\n        this.callbacks = [];\n        this.done = false;\n        this.loading = false;\n        this.errors = [];\n        this.apiKey = apiKey;\n        this.authReferrerPolicy = authReferrerPolicy;\n        this.channel = channel;\n        this.client = client;\n        this.id = id || DEFAULT_ID; // Do not allow empty string\n        this.language = language;\n        this.libraries = libraries;\n        this.mapIds = mapIds;\n        this.nonce = nonce;\n        this.region = region;\n        this.retries = retries;\n        this.url = url;\n        this.version = version;\n        if (Loader.instance) {\n            if (!fastDeepEqual(this.options, Loader.instance.options)) {\n                throw new Error(`Loader must not be called again with different options. ${JSON.stringify(this.options)} !== ${JSON.stringify(Loader.instance.options)}`);\n            }\n            return Loader.instance;\n        }\n        Loader.instance = this;\n    }\n    get options() {\n        return {\n            version: this.version,\n            apiKey: this.apiKey,\n            channel: this.channel,\n            client: this.client,\n            id: this.id,\n            libraries: this.libraries,\n            language: this.language,\n            region: this.region,\n            mapIds: this.mapIds,\n            nonce: this.nonce,\n            url: this.url,\n            authReferrerPolicy: this.authReferrerPolicy,\n        };\n    }\n    get status() {\n        if (this.errors.length) {\n            return LoaderStatus.FAILURE;\n        }\n        if (this.done) {\n            return LoaderStatus.SUCCESS;\n        }\n        if (this.loading) {\n            return LoaderStatus.LOADING;\n        }\n        return LoaderStatus.INITIALIZED;\n    }\n    get failed() {\n        return this.done && !this.loading && this.errors.length >= this.retries + 1;\n    }\n    /**\n     * CreateUrl returns the Google Maps JavaScript API script url given the [[LoaderOptions]].\n     *\n     * @ignore\n     */\n    createUrl() {\n        let url = this.url;\n        url += `?callback=${this.CALLBACK}`;\n        if (this.apiKey) {\n            url += `&key=${this.apiKey}`;\n        }\n        if (this.channel) {\n            url += `&channel=${this.channel}`;\n        }\n        if (this.client) {\n            url += `&client=${this.client}`;\n        }\n        if (this.libraries.length > 0) {\n            url += `&libraries=${this.libraries.join(\",\")}`;\n        }\n        if (this.language) {\n            url += `&language=${this.language}`;\n        }\n        if (this.region) {\n            url += `&region=${this.region}`;\n        }\n        if (this.version) {\n            url += `&v=${this.version}`;\n        }\n        if (this.mapIds) {\n            url += `&map_ids=${this.mapIds.join(\",\")}`;\n        }\n        if (this.authReferrerPolicy) {\n            url += `&auth_referrer_policy=${this.authReferrerPolicy}`;\n        }\n        return url;\n    }\n    deleteScript() {\n        const script = document.getElementById(this.id);\n        if (script) {\n            script.remove();\n        }\n    }\n    /**\n     * Load the Google Maps JavaScript API script and return a Promise.\n     */\n    load() {\n        return this.loadPromise();\n    }\n    /**\n     * Load the Google Maps JavaScript API script and return a Promise.\n     *\n     * @ignore\n     */\n    loadPromise() {\n        return new Promise((resolve, reject) => {\n            this.loadCallback((err) => {\n                if (!err) {\n                    resolve(window.google);\n                }\n                else {\n                    reject(err.error);\n                }\n            });\n        });\n    }\n    /**\n     * Load the Google Maps JavaScript API script with a callback.\n     */\n    loadCallback(fn) {\n        this.callbacks.push(fn);\n        this.execute();\n    }\n    /**\n     * Set the script on document.\n     */\n    setScript() {\n        if (document.getElementById(this.id)) {\n            // TODO wrap onerror callback for cases where the script was loaded elsewhere\n            this.callback();\n            return;\n        }\n        const url = this.createUrl();\n        const script = document.createElement(\"script\");\n        script.id = this.id;\n        script.type = \"text/javascript\";\n        script.src = url;\n        script.onerror = this.loadErrorCallback.bind(this);\n        script.defer = true;\n        script.async = true;\n        if (this.nonce) {\n            script.nonce = this.nonce;\n        }\n        document.head.appendChild(script);\n    }\n    /**\n     * Reset the loader state.\n     */\n    reset() {\n        this.deleteScript();\n        this.done = false;\n        this.loading = false;\n        this.errors = [];\n        this.onerrorEvent = null;\n    }\n    resetIfRetryingFailed() {\n        if (this.failed) {\n            this.reset();\n        }\n    }\n    loadErrorCallback(e) {\n        this.errors.push(e);\n        if (this.errors.length <= this.retries) {\n            const delay = this.errors.length * Math.pow(2, this.errors.length);\n            console.log(`Failed to load Google Maps script, retrying in ${delay} ms.`);\n            setTimeout(() => {\n                this.deleteScript();\n                this.setScript();\n            }, delay);\n        }\n        else {\n            this.onerrorEvent = e;\n            this.callback();\n        }\n    }\n    setCallback() {\n        window.__googleMapsCallback = this.callback.bind(this);\n    }\n    callback() {\n        this.done = true;\n        this.loading = false;\n        this.callbacks.forEach((cb) => {\n            cb(this.onerrorEvent);\n        });\n        this.callbacks = [];\n    }\n    execute() {\n        this.resetIfRetryingFailed();\n        if (this.done) {\n            this.callback();\n        }\n        else {\n            // short circuit and warn if google.maps is already loaded\n            if (window.google && window.google.maps && window.google.maps.version) {\n                console.warn(\"Google Maps already loaded outside @googlemaps/js-api-loader.\" +\n                    \"This may result in undesirable behavior as options and script parameters may not match.\");\n                this.callback();\n                return;\n            }\n            if (this.loading) ;\n            else {\n                this.loading = true;\n                this.setCallback();\n                this.setScript();\n            }\n        }\n    }\n}\n\nexport { DEFAULT_ID, Loader, LoaderStatus };\n//# sourceMappingURL=index.esm.js.map\n","import { Loader } from '@googlemaps/js-api-loader';\r\n\r\nlet googleMaps: typeof google.maps;\r\n\r\nconst loadGoogleMaps = () => {\r\n  const loader = new Loader({\r\n    apiKey: \"AIzaSyA-T6S3baY4-AZuTSc9Fryb9fCH8Ihi0Uc\",\r\n    version: 'weekly',\r\n    libraries: ['places']\r\n  });\r\n\r\n  return loader.load().then((google) => {\r\n    googleMaps = google.maps;\r\n    return googleMaps;\r\n  }).catch((err) => {\r\n    console.error('Failed to load Google Maps API:', err);\r\n  });\r\n};\r\n\r\nconst calculateRoute = (startCoords: any, endCoords: any, googleMap: any) => {\r\n  const directionsService = new google.maps.DirectionsService();\r\n  const directionsRequest = {\r\n    origin: { lat: startCoords.lat, lng: startCoords.lng },\r\n    destination: { lat: endCoords.lat, lng: endCoords.lng },\r\n    travelMode: google.maps.TravelMode.DRIVING\r\n  };\r\n  directionsService.route(directionsRequest, (response: any, status: any) => {\r\n    if (status === 'OK') {\r\n      const directionsRenderer = new google.maps.DirectionsRenderer();\r\n      directionsRenderer.setMap(googleMap);\r\n      directionsRenderer.setDirections(response);\r\n      const bounds = response.routes[0].bounds;\r\n      googleMap.fitBounds(bounds);\r\n    } else {\r\n      console.log('Directions request failed due to ' + status);\r\n    }\r\n  });\r\n};\r\n\r\nconst drawDriverProgress = (driverCoords: any, passengerCoords: any, googleMap: any) => {\r\n  const driverIcon = {\r\n    url: require('@/img/map_markers/car.png'),\r\n    scaledSize: new google.maps.Size(50, 50),\r\n    origin: new google.maps.Point(0, 0),\r\n    anchor: new google.maps.Point(25, 25)\r\n  };\r\n\r\n  const passengerIcon = {\r\n    url: require('@/img/map_markers/passenger.png'),\r\n    scaledSize: new google.maps.Size(50, 50),\r\n    origin: new google.maps.Point(0, 0),\r\n    anchor: new google.maps.Point(25, 25)\r\n  };\r\n\r\n  const driverMarker = new google.maps.Marker({\r\n    position: driverCoords,\r\n    map: googleMap,\r\n    icon: driverIcon\r\n  });\r\n\r\n  const passengerMarker = new google.maps.Marker({\r\n    position: passengerCoords,\r\n    map: googleMap,\r\n    icon: passengerIcon\r\n  });\r\n\r\n  const driverPosition = driverMarker.getPosition();\r\nconst passengerPosition = passengerMarker.getPosition();\r\n\r\nif (driverPosition && passengerPosition) {\r\n  const bounds = new google.maps.LatLngBounds();\r\n  bounds.extend(driverPosition);\r\n  bounds.extend(passengerPosition);\r\n  googleMap.fitBounds(bounds);\r\n}\r\n};\r\n\r\nimport { Geolocation } from '@capacitor/geolocation';\r\n\r\nconst startNavigator = async (startCoords: any, endCoords: any, googleMap: google.maps.Map) => {\r\n  const directionsService = new google.maps.DirectionsService();\r\n  const directionsRequest = {\r\n    origin: { lat: startCoords.lat, lng: startCoords.lng },\r\n    destination: { lat: endCoords.lat, lng: endCoords.lng },\r\n    travelMode: google.maps.TravelMode.DRIVING\r\n  };\r\n\r\n  let currentLocationMarker: google.maps.Marker | null = null;\r\n  let currentBearing = 0;\r\n\r\n  const position = await Geolocation.getCurrentPosition();\r\n  const currentLocation = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\r\n\r\n  // Update the current location marker and pan the map to the new location\r\n  if (!currentLocationMarker) {\r\n    currentLocationMarker = new google.maps.Marker({\r\n      map: googleMap,\r\n      icon: {\r\n        url: '',\r\n        scaledSize: new google.maps.Size(50, 50),\r\n        origin: new google.maps.Point(0, 0),\r\n        anchor: new google.maps.Point(25, 25)\r\n      }\r\n    });\r\n  }\r\n  currentLocationMarker.setPosition(currentLocation);\r\n  googleMap.panTo(currentLocation);\r\n\r\n  // Calculate the new route and redraw it on the map\r\n  directionsService.route(directionsRequest, (response: any, status: any) => {\r\n    if (status === 'OK') {\r\n      const directionsRenderer = new google.maps.DirectionsRenderer();\r\n      directionsRenderer.setMap(googleMap);\r\n      directionsRenderer.setDirections(response);\r\n      const route = response.routes[0];\r\n\r\n      // Calculate the bearing between the user's current location and the next step of the route\r\n      const nextStep = route.legs[0].steps[0];\r\n      const nextStepStart = new google.maps.LatLng(nextStep.start_location.lat(), nextStep.start_location.lng());\r\n      const bearing = google.maps.geometry.spherical.computeHeading(currentLocation, nextStepStart);\r\n\r\n      // Smoothly rotate the map towards the new bearing\r\n      if (Math.abs(bearing - currentBearing) > 1) {\r\n        const easingFactor = 0.1;\r\n        currentBearing = currentBearing + easingFactor * (bearing - currentBearing);\r\n        googleMap.setHeading(currentBearing);\r\n      } else {\r\n        googleMap.setHeading(bearing);\r\n      }\r\n    } else {\r\n      console.log('Directions request failed due to ' + status);\r\n    }\r\n  });\r\n};\r\n\r\nexport default {\r\n  load: loadGoogleMaps,\r\n  calculateRoute: calculateRoute,\r\n  drawDriverProgress: drawDriverProgress,\r\n  startNavigator: startNavigator\r\n};\r\n\r\ndeclare global {\r\n  interface Window {\r\n    google: typeof google;\r\n  }\r\n}\r\n"],"names":["fastDeepEqual","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","DEFAULT_ID","LoaderStatus","Loader","apiKey","authReferrerPolicy","channel","client","id","language","libraries","mapIds","nonce","region","retries","url","version","this","CALLBACK","callbacks","done","loading","errors","instance","options","Error","JSON","stringify","status","FAILURE","SUCCESS","LOADING","INITIALIZED","failed","createUrl","join","deleteScript","script","document","getElementById","remove","load","loadPromise","Promise","resolve","reject","loadCallback","err","error","window","google","fn","push","execute","setScript","callback","createElement","type","src","onerror","loadErrorCallback","bind","defer","async","head","appendChild","reset","onerrorEvent","resetIfRetryingFailed","e","delay","Math","pow","console","log","setTimeout","setCallback","__googleMapsCallback","forEach","cb","maps","warn","googleMaps","loadGoogleMaps","loader","then","catch","calculateRoute","startCoords","endCoords","googleMap","directionsService","DirectionsService","directionsRequest","origin","lat","lng","destination","travelMode","TravelMode","DRIVING","route","response","directionsRenderer","DirectionsRenderer","setMap","setDirections","bounds","routes","fitBounds","drawDriverProgress","driverCoords","passengerCoords","driverIcon","require","scaledSize","Size","Point","anchor","passengerIcon","driverMarker","Marker","position","map","icon","passengerMarker","driverPosition","getPosition","passengerPosition","LatLngBounds","extend","startNavigator","currentLocationMarker","currentBearing","Geolocation","currentLocation","LatLng","coords","latitude","longitude","setPosition","panTo","nextStep","legs","steps","nextStepStart","start_location","bearing","geometry","spherical","computeHeading","abs","easingFactor","setHeading"],"sourceRoot":""}